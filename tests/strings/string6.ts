var count = 0;

function print(pos) {
    count++;
    if (pos > -1)
        console.log(count, ". found at position ", pos);
    else
        console.log(count, ". not found");
}

print("nnda".search(/n*.a/));
print("nna".search(/n*a/));
print("a".search(/n*a/));
print("a".search(/n.*a/));
print("nda".search(/n.*a/));
print("naa".search(/n.*a/));
print("ana".search(/n.*a/));
print("nddna".search(/n.a/));
print("nnada".search(/n*a*d/));
print("naaada".search(/n*a*d/));
print("d".search(/n*a*d/));
print("x".search(/n*a*d/));
print("nnaed".search(/nn*a*d/));
print("abcdefff23334".search(/.*a.*ff*23335*4/));
print("abcdefff23334".search(/ff*23335*/));
print("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy".search(/(x+x+)+y/));
print("acb".search(/a.b/));
print("abc".search(/abc/));
print("xbc".search(/abc/));
print("axc".search(/abc/));
print("abx".search(/abc/));
print("xabcy".search(/abc/));
print("ababc".search(/abc/));
print("abc".search(/ab*c/));
print("abc".search(/ab*bc/));
print("abbc".search(/ab*bc/));
print("abbbbc".search(/ab*bc/));
print("abbc".search(/ab+bc/));
print("abc".search(/ab+bc/));
print("abq".search(/ab+bc/));
print("abbbbc".search(/ab+bc/));
print("abbc".search(/ab?bc/));
print("abc".search(/ab?bc/));
print("abbbbc".search(/ab?bc/));
print("abc".search(/ab?c/));
print("abc".search(/^abc$/));
print("abcc".search(/^abc$/));
print("abcc".search(/^abc/));
print("aabc".search(/^abc$/));
print("aabc".search(/abc$/));
print("abc".search(/^/));
print("abc".search(/$/));
print("abc".search(/a.c/));
print("axc".search(/a.c/));
print("axyzc".search(/a.*c/));
print("axyzd".search(/a.*c/));
print("abc".search(/a[bc]d/));
print("abd".search(/a[bc]d/));
print("abd".search(/a[b-d]e/));
print("ace".search(/a[b-d]e/));
print("aac".search(/a[b-d]/));
print("a-".search(/a[-b]/));
print("a-".search(/a[\-b]/));
print("a]".search(/a]/));
print("a]b".search(/a[\]]b/));
print("aed".search(/a[^bc]d/));
print("abd".search(/a[^bc]d/));
print("adc".search(/a[^-b]c/));
print("a-c".search(/a[^-b]c/));
print("a]c".search(/a[^]b]c/));
print("adc".search(/a[^]b]c/));
print("abc".search(/ab|cd/));
print("abcd".search(/ab|cd/));
print("def".search(/()ef/));
print("b".search(/$b/));
print("a(b".search(/a\(b/));
print("ab".search(/a\(*b/));
print("a((b".search(/a\(*b/));
print("a\\b".search(/a\\b/));
print("abc".search(/((a))/));
print("abc".search(/(a)b(c)/));
print("aabbabc".search(/a+b+c/));
print("ab".search(/(a+|b)*/));
print("ab".search(/(a+|b)+/));
print("ab".search(/(a+|b)?/));
print("cde".search(/[^ab]*/));
print("".search(/abc/));
print("".search(/a*/));
print("e".search(/a|b|c|d|e/));
print("ef".search(/(a|b|c|d|e)f/));
print("abcdefg".search(/abcd*efg/));
print("xabyabbbz".search(/ab*/));
print("xayabbbz".search(/ab*/));
print("abcde".search(/(ab|cd)e/));
print("hij".search(/[abhgefdc]ij/));
print("abcde".search(/^(ab|cd)e/));
print("abcdef".search(/(abc|)ef/));
print("abcd".search(/(a|b)c*d/));
// print("abc".search(/(ab|ab*)bc/));
// print("abc".search(/a([bc]*)c*/));
// print("abcd".search(/a([bc]*)(c*d)/));
// print("abcd".search(/a([bc]+)(c*d)/));
// print("abcd".search(/a([bc]*)(c+d)/));
// print("adcdcde".search(/a[bcd]*dcdcde/));
// print("adcdcde".search(/a[bcd]+dcdcde/));
// print("abc".search(/(ab|a)b*c/));
// print("abcd".search(/((a)(b)c)(d)/));
// print("alpha".search(/[a-zA-Z_][a-zA-Z0-9_]*/));
// print("abh".search(/^a(bc+|b[eh])g|.h$/));
// print("effgz".search(/(bc+d$|ef*g.|h?i(j|k))/));
// print("ij".search(/(bc+d$|ef*g.|h?i(j|k))/));
// print("effg".search(/(bc+d$|ef*g.|h?i(j|k))/));
// print("bcdd".search(/(bc+d$|ef*g.|h?i(j|k))/));
// print("reffgz".search(/(bc+d$|ef*g.|h?i(j|k))/));
// print("a".search(/(((((((((a)))))))))/));
// print("uh-uh".search(/multiple words of text/));
// print("multiple words, yeah".search(/multiple words/));
// print("abcde".search(/(.*)c(.*)/));
// print("(a, b)".search(/\\((.*); (.*)\\)/));
// print("ab".search(/[k]/));
// print("ac".search(/a[-]?c/));
// print("ab".search(/(a)(b)c|ab/));
// print("aaax".search(/(a)+x/));
// print("aacx".search(/([ac])+x/));
// print("d:msgs/tdir/sub1/trial/away.cpp".search(/([^\/]*\/)*sub1\//));
// print("track1.title:TBlah blah blah".search(/([^.]*)\.([^:]*):[T ]+(.*)/));
// print("abNNxyzN".search(/([^N]*N)+/));
// print("abNNxyz".search(/([^N]*N)+/));
// print("abcx".search(/([abc]*)x/));
// print("abc".search(/([abc]*)x/));
// print("abcx".search(/([xyz]*)x/));
// print("aac".search(/(a)+b|aac/));
